#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>
sem_t wrt; pthread_mutex_t m; int readcount=0,data=0;
void* reader(void* id){
    pthread_mutex_lock(&m);
    readcount++; if(readcount==1) sem_wait(&wrt);
    pthread_mutex_unlock(&m);
    printf("Reader %d reads %d\n",*(int*)id,data);
    pthread_mutex_lock(&m);
    readcount--; if(readcount==0) sem_post(&wrt);
    pthread_mutex_unlock(&m);
}
void* writer(void* id){
    sem_wait(&wrt);
    data++; printf("Writer %d writes %d\n",*(int*)id,data);
    sem_post(&wrt);
}
int main(){
    pthread_t r1,r2,w1; int a=1,b=2,c=1;
    sem_init(&wrt,0,1); pthread_mutex_init(&m,NULL);
    pthread_create(&w1,NULL,writer,&c);
    pthread_create(&r1,NULL,reader,&a);
    pthread_create(&r2,NULL,reader,&b);
    pthread_join(w1,NULL); pthread_join(r1,NULL); pthread_join(r2,NULL);
}
OUTPUT:
writer 1 writes 1
Reader 1 reads 1
Reader 2 reads 1
